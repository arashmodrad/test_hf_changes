# .github/workflows/export-map-errors.yml
# Uses built-in GITHUB_TOKEN; no need to set a custom token for public repos

name: "Export Map-Error Reports to CSV" # Name shown in the Actions tab

# This section defines when the workflow runs
on:
  workflow_dispatch: # ➡️ allows manual runs from the Actions tab in GitHub UI
  # Uncomment below to run nightly (schedule is in UTC)
  # schedule:
  #   - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  export: # Define a job named 'export'
    runs-on: ubuntu-latest # Use the latest Ubuntu runner environment

    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3 # Use the official checkout action
        with:
          # fetch-depth: 0 gets the full history, useful for some actions,
          # though 1 is sufficient for this script which only needs file access
          fetch-depth: 0

      # 2. Set up Python environment
      - name: Set up Python 3.x
        uses: actions/setup-python@v4 # Use the official setup-python action
        with:
          python-version: '3.x' # Use any recent 3.x version

      # 3. Install necessary Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub 

      # 4. Run the Python script to export issues
      - name: Export "map-error" issues to CSV
        # Set environment variables required by the script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Built-in token, automatically available
          REPO: ${{ github.repository }}             # Automatically gets the repo name (e.g. "arashmodrad/test_hf_changes")
        run: |
          # Execute the python script with the specified arguments
          python .github/scripts/export_map_errors.py \
            --label map-error \
            --output map-error-reports.csv # The name of the output file

      # 5. Upload the generated CSV file as a workflow artifact
      # This makes the file downloadable from the workflow run page
      - name: Upload CSV
        # CHANGED: Use a specific minor version tag instead of just 'v3'
        uses: actions/upload-artifact@v3.1.4
        with:
          name: map-error-reports # The name for the artifact in the UI
          path: map-error-reports.csv # The file path to upload